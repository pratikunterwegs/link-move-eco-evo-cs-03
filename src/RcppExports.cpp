// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// get_test_landscape
Rcpp::DataFrame get_test_landscape(const int nItems, const float landsize, const int nClusters, const float clusterSpread, const int regen_time, const float p_type);
RcppExport SEXP _ecoevomove3_get_test_landscape(SEXP nItemsSEXP, SEXP landsizeSEXP, SEXP nClustersSEXP, SEXP clusterSpreadSEXP, SEXP regen_timeSEXP, SEXP p_typeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type nItems(nItemsSEXP);
    Rcpp::traits::input_parameter< const float >::type landsize(landsizeSEXP);
    Rcpp::traits::input_parameter< const int >::type nClusters(nClustersSEXP);
    Rcpp::traits::input_parameter< const float >::type clusterSpread(clusterSpreadSEXP);
    Rcpp::traits::input_parameter< const int >::type regen_time(regen_timeSEXP);
    Rcpp::traits::input_parameter< const float >::type p_type(p_typeSEXP);
    rcpp_result_gen = Rcpp::wrap(get_test_landscape(nItems, landsize, nClusters, clusterSpread, regen_time, p_type));
    return rcpp_result_gen;
END_RCPP
}
// run_model
S4 run_model(const int popsize, const int scenario, const int nItems, const float p_type, const float landsize, const int nClusters, const float clusterSpread, const int handling_time, const int regen_time, const int tmax, const int genmax, const float range_perception, const float cost_bodysize, const float range_move, const float dispersal, const int nThreads, const float mProb, const float mSize);
RcppExport SEXP _ecoevomove3_run_model(SEXP popsizeSEXP, SEXP scenarioSEXP, SEXP nItemsSEXP, SEXP p_typeSEXP, SEXP landsizeSEXP, SEXP nClustersSEXP, SEXP clusterSpreadSEXP, SEXP handling_timeSEXP, SEXP regen_timeSEXP, SEXP tmaxSEXP, SEXP genmaxSEXP, SEXP range_perceptionSEXP, SEXP cost_bodysizeSEXP, SEXP range_moveSEXP, SEXP dispersalSEXP, SEXP nThreadsSEXP, SEXP mProbSEXP, SEXP mSizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type popsize(popsizeSEXP);
    Rcpp::traits::input_parameter< const int >::type scenario(scenarioSEXP);
    Rcpp::traits::input_parameter< const int >::type nItems(nItemsSEXP);
    Rcpp::traits::input_parameter< const float >::type p_type(p_typeSEXP);
    Rcpp::traits::input_parameter< const float >::type landsize(landsizeSEXP);
    Rcpp::traits::input_parameter< const int >::type nClusters(nClustersSEXP);
    Rcpp::traits::input_parameter< const float >::type clusterSpread(clusterSpreadSEXP);
    Rcpp::traits::input_parameter< const int >::type handling_time(handling_timeSEXP);
    Rcpp::traits::input_parameter< const int >::type regen_time(regen_timeSEXP);
    Rcpp::traits::input_parameter< const int >::type tmax(tmaxSEXP);
    Rcpp::traits::input_parameter< const int >::type genmax(genmaxSEXP);
    Rcpp::traits::input_parameter< const float >::type range_perception(range_perceptionSEXP);
    Rcpp::traits::input_parameter< const float >::type cost_bodysize(cost_bodysizeSEXP);
    Rcpp::traits::input_parameter< const float >::type range_move(range_moveSEXP);
    Rcpp::traits::input_parameter< const float >::type dispersal(dispersalSEXP);
    Rcpp::traits::input_parameter< const int >::type nThreads(nThreadsSEXP);
    Rcpp::traits::input_parameter< const float >::type mProb(mProbSEXP);
    Rcpp::traits::input_parameter< const float >::type mSize(mSizeSEXP);
    rcpp_result_gen = Rcpp::wrap(run_model(popsize, scenario, nItems, p_type, landsize, nClusters, clusterSpread, handling_time, regen_time, tmax, genmax, range_perception, cost_bodysize, range_move, dispersal, nThreads, mProb, mSize));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_ecoevomove3_get_test_landscape", (DL_FUNC) &_ecoevomove3_get_test_landscape, 6},
    {"_ecoevomove3_run_model", (DL_FUNC) &_ecoevomove3_run_model, 18},
    {NULL, NULL, 0}
};

RcppExport void R_init_ecoevomove3(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
